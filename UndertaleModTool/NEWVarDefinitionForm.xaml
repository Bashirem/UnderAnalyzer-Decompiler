<Window x:Class="UndertaleModTool.VarDefinitionForm"
        IsVisibleChanged="Window_IsVisibleChanged"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UndertaleModTool"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=local:Settings}"
        ResizeMode="NoResize"
        Title="Variable Definition Maker" Height="400" Width="700" MaxHeight="400" MaxWidth="700" SizeToContent="Height" WindowStartupLocation="CenterOwner">

    <ScrollViewer VerticalScrollBarVisibility="Auto">
        <StackPanel>
            <TextBlock Text="Variable Definition Maker" Margin="10,10,10,4" FontWeight="Bold"
                       ToolTip="Variable Definition that will be accounted for when Decompiling"/>

            <!-- Massive Explaination Text with even bigger Explaination ToolTip -->
            <TextBlock Grid.Row="14" Grid.Column="0" Grid.ColumnSpan="4" Margin="10" TextWrapping="Wrap" Text="Here you can Define Variables for any game you like. To learn about how to format your inputs correctly, hover over this text. Press the 'Any Game Save' button to save the files and make them apply to any Game Loaded, or press 'Specific Game Save' to make these definitions apply solely to the Game currently loaded">
                <TextBlock.ToolTip>
                    <ToolTip>
                        <TextBlock>
                            To add a Variable, press the 'Add Variable' button. 
                            <LineBreak/>
                            In the First Textbox, input the Variable you wish to define
                            <LineBreak/>
                            In the Second Textbox, select the Asset Type you want to define it as in the DropDown Menu.
                            <LineBreak/>
                            <LineBreak/>
                            Example:   spr_player   |   Asset.Sprite
                            <LineBreak/>
                            Outcome:   spr_player = spr_player_walking;
                            <LineBreak/>
                            <LineBreak/>
                            To add a Function, press the 'Add Function' button
                            <LineBreak/>
                            In the First Textbox, input the Function you wish to define (keep the gml_Script_)
                            <LineBreak/>
                            In the Second Textbox, type out the Asset Types of all arguments the function takes 
                            <LineBreak/>
                            (if you dont want to specify an argument, just input null)
                            <LineBreak/>
                            <LineBreak/>
                            Example: gml_Script_scr_sound   |   Asset.Sound, null, Bool
                            <LineBreak/>
                            Outcome: scr_sound(sfx_punch, 10, true);
                        </TextBlock>
                    </ToolTip>
                </TextBlock.ToolTip>
            </TextBlock>

            <!-- StackPanel to hold dynamic rows -->
            <StackPanel x:Name="VariableRowsPanel" Margin="10,0,10,3">
                <Grid Margin="10,0,10,10">
                    <Grid.ColumnDefinitions>
                        <!-- First column for Variable label and TextBox -->
                        <ColumnDefinition Width="Auto"/>
                        <!-- Second column for Asset Type label and ComboBox -->
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Variable label -->
                    <TextBlock Grid.Row="0" Grid.Column="0" Margin="10" Text="Variable:" ToolTip="Prefix used for named instance IDs when found by decompiler, and for compilation. Change this value if it conflicts with variable names." VerticalAlignment="Center"/>

                    <!-- Asset Type label -->
                    <TextBlock Grid.Column="1" Margin="283,0,0,0" Text="Asset Types:" ToolTip="Asset Type of the Variable" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                </Grid>

            </StackPanel>

            <!-- Buttons for Add and Save -->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="10">
                <local:ButtonDark Width="100" Margin="10" Click="AddVarRowButton_Click" ToolTip="Add a Row for a New Variable">Add Variable</local:ButtonDark>
                <!-- New button for adding function row -->
                <local:ButtonDark Width="100" Margin="10" Click="AddFunctionRowButton_Click" ToolTip="Add a Row for a New Function">Add Function</local:ButtonDark>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Width="340">
                <local:ButtonDark Width="150" Margin="10" Click="SaveButtonMulti_Click" ToolTip="Save JSON to work with any Game Loaded">Any Game Save</local:ButtonDark>
                <local:ButtonDark Width="150" Margin="10" Click="SaveButtonSingle_Click" ToolTip="Save JSON to work with only the Game Loaded">Specific Game Save</local:ButtonDark>
            </StackPanel>

        </StackPanel>
    </ScrollViewer>
</Window>



